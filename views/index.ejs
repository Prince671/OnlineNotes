<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Create Your Notes</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <style>
    body {
      user-select: none;
    }

    input,
    textarea,
    button {
      user-select: text;
    }
  </style>
  <script>
    tailwind.config = {
      theme: {
        extend: {
          animation: {
            fadeInUp: "fadeInUp 0.5s ease-out forwards",
            pulseSlow: "pulse 3s ease-in-out infinite",
            fadeInModal: "fadeInModal 0.3s ease-out forwards",
            flyToBin: "flyToBin 0.6s ease-in-out forwards"
          },
          keyframes: {
            fadeInUp: {
              "0%": { opacity: 0, transform: "translateY(20px)" },
              "100%": { opacity: 1, transform: "translateY(0)" },
            },
            fadeInModal: {
              "0%": { opacity: 0, transform: "scale(0.8)" },
              "100%": { opacity: 1, transform: "scale(1)" },
            },
            flyToBin: {
              "0%": { opacity: 1, transform: "translateY(0) scale(1)" },
              "100%": { opacity: 0, transform: "translateY(100px) scale(0.5)" },
            }
          }
        }
      }
    };

    let currentFile = "";
    let isEditing = false;

    function openModal(filename) {
      currentFile = filename;
      isEditing = false;

      const modal = document.getElementById('noteModal');
      const modalContent = document.getElementById('modalContent');

      fetch(`/Files/${filename}`)
        .then(response => response.text())
        .then(data => {
          modalContent.innerHTML = `
          <h3 class="text-xl font-bold text-green-400 mb-4">${filename}</h3>
          <div id="viewMode">
            <pre class="whitespace-pre-wrap break-words text-sm text-zinc-200">${data}</pre>
            <button onclick="startEditing('${filename}', \`${data.replace(/`/g, '\\`')}\`)" class="mt-4 px-4 py-2 bg-blue-600 hover:bg-blue-500 text-white rounded-lg">Edit Note</button>
          </div>
        `;
        })
        .catch(err => {
          modalContent.innerHTML = `<p class="text-red-500">Error loading file: ${err}</p>`;
        });

      modal.classList.remove('hidden');
      modal.classList.add('animate-fadeInModal');
    }

    function startEditing(filename, content) {
      isEditing = true;
      const modalContent = document.getElementById('modalContent');
      modalContent.innerHTML = `
      <h3 class="text-xl font-bold text-yellow-400 mb-4">${filename}</h3>
      <form onsubmit="event.preventDefault(); saveEdit('${filename}')">
        <textarea id="editArea" class="w-full h-64 p-4 bg-zinc-700 text-white rounded-lg resize-none">${content}</textarea>
        <div class="mt-4 flex justify-end space-x-4">
          <button type="button" onclick="cancelEdit()" class="px-4 py-2 bg-zinc-500 hover:bg-zinc-400 text-white rounded-lg">Cancel</button>
          <button type="submit" class="px-4 py-2 bg-green-600 hover:bg-green-500 text-white rounded-lg">Save</button>
        </div>
      </form>
    `;
    }

    function cancelEdit() {
      openModal(currentFile);
    }

    function saveEdit(filename) {
      const newData = document.getElementById('editArea').value;

      fetch('/update', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ filename, content: newData })
      })
        .then(res => {
          if (!res.ok) throw new Error('Failed to update');
          return res.text();
        })
        .then(() => {
          openModal(filename);
        })
        .catch(err => {
          alert("Error updating note: " + err.message);
        });
    }

    function closeModal() {
      const modal = document.getElementById('noteModal');
      modal.classList.add('hidden');
    }

    // Delete modal logic stays the same
  </script>

</head>

<body class="bg-zinc-900 text-white font-sans">
  <div class="main min-h-screen w-full flex flex-col items-center justify-start py-10 px-4">

    <!-- Form Section -->
    <div class="form bg-zinc-800 p-8 rounded-xl shadow-xl border border-zinc-700 w-full max-w-xl animate-fadeInUp">
      <h2 class="text-3xl font-semibold mb-6 text-center text-green-400 animate-pulseSlow">Create a Note</h2>
      <form action="/create" method="post">
        <input
          class="block mb-4 w-full rounded-lg px-5 py-3 bg-zinc-700 placeholder-zinc-400 text-white focus:outline-none focus:ring-2 focus:ring-green-500 transition"
          type="text" name="title" id="Title" placeholder="Enter the Title of the Note" required maxlength="100" />
        <textarea
          class="block mb-4 w-full rounded-lg px-5 py-3 bg-zinc-700 placeholder-zinc-400 text-white resize-none h-32 focus:outline-none focus:ring-2 focus:ring-green-500 transition"
          name="details" id="details" placeholder="Write your Note here..." maxlength="500000" required></textarea>
        <input
          class="bg-green-600 hover:bg-green-500 transition text-white font-semibold px-6 py-3 rounded-lg w-full cursor-pointer"
          type="submit" value="Create Task" />
      </form>
    </div>

    <!-- Tasks Section -->
    <div class="tasks mt-10 w-full max-w-6xl grid gap-6 grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 animate-fadeInUp">
      <% if (files.length> 0) { %>
        <% files.forEach(function(val) { %>
          <div
            class="relative task bg-zinc-700 p-5 rounded-xl shadow-lg border border-zinc-600 hover:scale-[1.03] hover:shadow-2xl transition-transform duration-300"
            id="card-<%= val %>">

            <!-- Delete Button -->
            <form action="/delete" method="POST"
              onsubmit="event.preventDefault(); confirmDelete(this, this.closest('.task'));">
              <input type="hidden" name="filename" value="<%= val %>">
              <button type="submit" title="Delete"
                class="absolute top-2 right-2 text-red-400 hover:text-red-300 bg-zinc-800 rounded-full w-8 h-8 flex items-center justify-center shadow hover:shadow-md transition">
                üóëÔ∏è
              </button>
            </form>

            <!-- Filename and Edit Button -->
            <div class="group flex items-center">
              <h1 class="text-white text-xl font-bold tracking-tight truncate max-w-[calc(100%-2rem)]"
                title="<%= val %>">
                <%= val %>
              </h1>
              <button title="Edit filename" onclick="openEditModal('<%= encodeURIComponent(val) %>')"
                class="ml-2 text-zinc-400 hover:text-yellow-400 transition-opacity opacity-0 group-hover:opacity-100">
                ‚úèÔ∏è
              </button>
            </div>

            <p class="text-sm text-zinc-300 mt-2 line-clamp-3">
              A brief description or snippet of your note content can go here to help users preview the note.
            </p>
            <button class="text-green-400 hover:underline inline-block mt-3 font-medium transition-colors duration-200"
              onclick="openModal('<%= val %>')">Read More...</button>
          </div>
          <% }); %>
            <% } else { %>
              <div class="col-span-full text-center animate-fadeInUp mt-10">
                <img src="https://cdn-icons-png.flaticon.com/512/4076/4076549.png" alt="No Tasks"
                  class="mx-auto w-24 h-24 opacity-40 mb-4" />
                <h3 class="text-zinc-500 text-lg italic">No tasks to show... Create your first note above!</h3>
              </div>
              <% } %>
    </div>
  </div>

  <!-- Note Reading Modal -->
  <div id="noteModal" class="hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
    <div class="bg-zinc-800 p-8 rounded-lg w-11/12 sm:w-2/3 max-w-2xl max-h-screen overflow-y-auto relative">
      <button onclick="closeModal()" class="absolute top-4 right-4 text-white text-2xl">‚úñ</button>
      <div id="modalContent" class="text-white text-sm"></div>
    </div>
  </div>

  <!-- Edit Filename Modal -->
  <div id="editModal" class="hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
    <div class="bg-zinc-800 p-6 rounded-lg w-96 relative animate-fadeInModal" id="editModalContent">
      <!-- Dynamic content will be inserted here -->
    </div>
  </div>

  <!-- Delete Confirmation Modal -->
  <div id="confirmModal" class="hidden fixed inset-0 bg-black bg-opacity-60 flex items-center justify-center z-50">
    <div class="bg-zinc-800 rounded-lg p-6 w-96 text-center shadow-lg animate-fadeInModal">
      <h3 class="text-xl font-semibold text-red-400 mb-4">Confirm Delete</h3>
      <p class="mb-6 text-zinc-300">Are you sure you want to delete this note? This action cannot be undone.</p>
      <div class="flex justify-center gap-4">
        <button onclick="cancelDelete()"
          class="px-4 py-2 rounded bg-zinc-600 hover:bg-zinc-500 text-white">Cancel</button>
        <button onclick="proceedDelete()"
          class="px-4 py-2 rounded bg-red-600 hover:bg-red-500 text-white">Delete</button>
      </div>
    </div>
  </div>

</body>

</html>